From 712e81306fd934b4d2a0684b10b74a882f41e19f Mon Sep 17 00:00:00 2001
From: Martin Willi <martin@revosec.ch>
Date: Wed, 24 Oct 2012 11:13:07 +0200
Subject: [PATCH 1/1] PKCS#11 library search using keyid uses a fallback to look for certificates

---
 .../plugins/pkcs11/pkcs11_private_key.c            |   12 ++++++++----
 1 files changed, 8 insertions(+), 4 deletions(-)

Index: strongswan-4.5.2/src/libstrongswan/plugins/pkcs11/pkcs11_private_key.c
===================================================================
--- strongswan-4.5.2.orig/src/libstrongswan/plugins/pkcs11/pkcs11_private_key.c	2013-08-01 17:23:39.625036224 +0200
+++ strongswan-4.5.2/src/libstrongswan/plugins/pkcs11/pkcs11_private_key.c	2013-08-01 17:23:41.645042367 +0200
@@ -332,7 +332,8 @@
 /**
  * Find the PKCS#11 lib having a keyid, and optionally a slot
  */
-static pkcs11_library_t* find_lib_by_keyid(chunk_t keyid, int *slot)
+static pkcs11_library_t* find_lib_by_keyid(chunk_t keyid, int *slot,
+										   CK_OBJECT_CLASS class)
 {
 	pkcs11_manager_t *manager;
 	enumerator_t *enumerator;
@@ -349,8 +350,7 @@
 	{
 		if (*slot == -1 || *slot == current)
 		{
-			/* we look for a public key, it is usually readable without login */
-			CK_OBJECT_CLASS class = CKO_PUBLIC_KEY;
+			/* look for a pubkey/cert, it is usually readable without login */
 			CK_ATTRIBUTE tmpl[] = {
 				{CKA_CLASS, &class, sizeof(class)},
 				{CKA_ID, keyid.ptr, keyid.len},
@@ -612,7 +612,11 @@
 	}
 	else
 	{
-		this->lib = find_lib_by_keyid(keyid, &slot);
+		this->lib = find_lib_by_keyid(keyid, &slot, CKO_PUBLIC_KEY);
+		if (!this->lib)
+		{
+			this->lib = find_lib_by_keyid(keyid, &slot, CKO_CERTIFICATE);
+		}
 		if (!this->lib)
 		{
 			DBG1(DBG_CFG, "no PKCS#11 module found having a keyid %#B", &keyid);
